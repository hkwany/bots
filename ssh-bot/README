# prepare file
- do ssh-copy-id from your local laptop to SSHD_SERVER, and then put the private key 'id_rsa' of your local laptop
into the ssh-bot main directory. In this way, all ssh bots can directly ssh into SSHD_SERVER without password.
- do ssh-copy-id from SSHD_SERVER to REMOTE_SERVER, so that SSHD_SERVER can directly ssh into REMOTE_SERVER without password.
- 
# compile your own docker image
##For automatic way
amend the ENV variables in Dockerfile and compile:
docker -build -t ssh-bot:latest .

## For manual way
directoy compile:
docker -build -t ssh-bot:latest .

# Two running methods
run it manually (still you can pass new ENV variables into it)
or
run it automatically using Octobot-Play(by means of ssh-concurrency.yaml)

# Options
REMOTE_SERVER= destination server
REMOTE_PORT= destination port 
REMOTE_USERNAME= destination login username
REMOTE_PASSWD= destination login passwd
SSHD_USERNAME= jump machine username
SSHD_SERVER= jump machine port
CONCURRENCY=1 check ssh concurrency connection
UPLOAD=1 scp upload little_file in the main directory to REMOTE_SERVER:/tmp/upload_file and you check results at remote server
DOWNLOAD=1 scp download SSHD_SERVER:/tmp/download_file to local download file and you can check results from output

# Example
docker run -it --rm -e REMOTE_SERVER=localhost -e REMOTE_PORT=22 -e REMOTE_USERNAME=centos -e SSHD_USERNAME=centos -e SSHD_SERVER=1.2.3.4 -e CONCURRENCY=1 -e UPLOAD=0 -e DOWNLOAD=0 hkwany/ssh-bot:latest
